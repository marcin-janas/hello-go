Hello, Go!
My place to collect information about Go

Marcin Janas

* Hello, Go!
In this presentation, I have tried to collect the most important information about Go

* Main
.play src/main.go
.link https://golang.org/ref/spec#Program_execution
.link https://golang.org/ref/spec#Bootstrapping
.link https://golang.org/doc/effective_go.html#package-names
.link https://tour.golang.org/basics/1
.link https://golang.org/pkg/builtin/#println

* Basic types
- string
- bool
- uint, uint8, uint16, uint32, uint64, uintptr, int, int8, int16, int32, int64, byte (alias for uint8), rune (alias for int32), float32, float64 complex64, complex128
- pointer, function, interface, slice, channel, map
- array, struct
.link https://golang.org/ref/spec#Types
.link https://tour.golang.org/basics/11

* Zero values
- "" for strings
- false for booleans
- 0 for numeric types
- nil for pointers, functions, interfaces, slices, channels, and maps
- "each element of an array of structs will have its fields zeroed if no value is specified"
.link https://golang.org/ref/spec#The_zero_value
.link https://tour.golang.org/basics/12

* Constants
.play src/constants.go
.link https://golang.org/ref/spec#Constants
.link https://golang.org/ref/spec#Iota
.link https://golang.org/doc/effective_go.html#constants

* Variables
.play src/variables.go
.link https://golang.org/ref/spec#Variables
.link https://golang.org/doc/effective_go.html#variables

* Import
.play src/import.go
.link https://golang.org/doc/effective_go.html#package-names
.link https://tour.golang.org/basics/2
.link https://golang.org/pkg/fmt/#Println
.link https://golang.org/pkg/log/#Println

* Init
.play src/init.go
.link https://golang.org/doc/effective_go.html#init
.link https://golang.org/ref/spec#Package_initialization
