* Log
.play src/log.go
.link https://golang.org/pkg/log/
.link https://dave.cheney.net/2015/11/05/lets-talk-about-logging
.link https://dave.cheney.net/2017/01/23/the-package-level-logger-anti-pattern

* Flag
.play src/flag.go
.link https://golang.org/pkg/flag/

* Coverage
.link https://blog.golang.org/cover

* Exec
.play src/exec.go
.link https://golang.org/pkg/os/exec/

* JSON
.code src/json.json
.code -edit src/json.go /START OMIT/,/END OMIT/

.link https://golang.org/pkg/encoding/json/

* HTTP
.code -edit src/http1.go /START OMIT/,/END OMIT/
.code -edit src/http2.go /START OMIT/,/END OMIT/

.link https://golang.org/pkg/net/http/
.link https://golang.org/doc/effective_go.html#web_server

* Dependencies
.link https://research.swtch.com/deps

* Strings
.link https://golang.org/pkg/strings/
.link https://yourbasic.org/golang/build-append-concatenate-strings-efficiently/

* Context
.link https://golang.org/pkg/context/
.link https://blog.golang.org/context
.link https://blog.golang.org/context-and-structs
.link https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html
.link https://www.youtube.com/watch?v=LSzR0VEraWw

* Make & New
- new:
.link https://golang.org/ref/spec#Allocation
.link https://golang.org/doc/effective_go.html#allocation_new

- make:
.link https://golang.org/ref/spec#Making_slices_maps_and_channels
.link https://golang.org/doc/effective_go.html#allocation_make

.link https://dave.cheney.net/2014/08/17/go-has-both-make-and-new-functions-what-gives

* Channels
.play src/chan1.go
.link https://golang.org/ref/spec#Channel_types
.link https://golang.org/doc/effective_go.html#channels
.link https://tour.golang.org/concurrency/2
.link https://www.youtube.com/watch?v=t9bEg2A4jsw
.link https://www.youtube.com/watch?v=B64hIRjNvLc

* Names
.link https://golang.org/doc/effective_go.html#names
.link https://talks.golang.org/2014/names.slide
.link https://dave.cheney.net/2019/01/08/avoid-package-names-like-base-util-or-common
.link https://www.youtube.com/watch?v=GXijarXgHHY

* Internal Directories
.link https://golang.org/cmd/go/#hdr-Internal_Directories

* Concurrency
"Do not communicate by sharing memory; instead, share memory by communicating"

.link https://golang.org/doc/effective_go.html#concurrency
.link https://talks.golang.org/2012/concurrency.slide#1
.link https://blog.golang.org/io2013-talk-concurrency
.link https://vimeo.com/49718712
.link https://blog.golang.org/waza-talk
.link https://blog.golang.org/pipelines
.link https://www.youtube.com/watch?v=YEKjSzIwAdA

* Goroutines
.link https://golang.org/ref/spec#Go_statements
.link https://golang.org/doc/effective_go.html#goroutines
.link https://golang.org/doc/faq#goroutines
.link https://golang.org/doc/faq#no_goroutine_id
.link https://golang.org/doc/faq#closures_and_goroutines
